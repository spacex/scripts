#!/bin/bash

#Usage:
# centos-git.sh <path to git repo> <path to kernel dirs>
# centos-git.sh <path to git repo> <path to file containing list of src rpms>

# Path to folder of kerneldirs
KDIR_DIR=${KDIR_DIR:-$(pwd)/kdir/}

function commit_kdir() {
  kdir=$(basename $1)
  echo $kdir

  # Clean out old tree so we don't have any cruft lying around
  rm -rf ${GIT_DIR}/{*,.config,.config.old}

  # Copy in new version
  cp -r $1/{*,.config,.config.old,.gitignore} ${GIT_DIR}/

  pushd $(pwd) &> /dev/null
  cd ${GIT_DIR}
  # Clean up all gitignores
  find . -name ".gitignore" -execdir mv {} gitignore \;

  # Add / commit / tag
  git add * .config*
  git commit -a -F - <<EOF
kernel-$kdir

CentOS kernel, generated by rpmbuild -bp --target=noarch
EOF
  git tag -a -m "$kdir" $kdir
  popd &> /dev/null
}

# Path to git checkout
if [ -d $1/.git ]; then
  GIT_DIR="$1"
  shift
else
  echo "Git repo does not exist."
  exit 1
fi

if [ $# -gt 1 ]; then
  for f in $@; do
	echo $f
    commit_kdir $f &> $(dirname $f)/$(basename $f).git.log
  done
elif [ $# == 1 ]; then
  if [[ "${1%%\.rpm}" != "$1" ]]; then
    if [ -d "$1" ]; then
      echo $1
      commit_kdir $1 $> ${dirname $f}/$(basename $1).git.log
    fi
  else
    for f in `cat $1`; do
      f=$(basename $f)
      kver=${f%%.src.rpm}
      kdir=${kver##kernel-}
	  echo ${KDIR_DIR}/$kdir
      commit_kdir ${KDIR_DIR}/$kdir &> ${KDIR_DIR}/$kdir.git.log
    done
  fi
else
  echo "Provide directories to process."
fi
